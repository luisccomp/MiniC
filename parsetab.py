
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACHAVE APAR FCHAVE FLOAT FPAR ID INT LITINT PTOVIRG RETURN VIRG VOID\n    programa : lista_dec_externas\n    \n    lista_dec_externas :\n    \n    lista_dec_externas : lista_dec_externas dec_externa\n    \n    dec_externa : dec_funcao\n    \n    dec_funcao : tipo_retorno ID APAR lista_argumentos FPAR ACHAVE lista_comandos FCHAVE\n    \n    lista_comandos :\n    \n    argumento : tipo_primitivo ID\n    \n    lista_argumentos :\n    \n    lista_argumentos : argumento\n    \n    lista_argumentos : lista_argumentos VIRG argumento\n    \n    tipo_retorno : tipo_primitivo\n                 | VOID\n    \n    tipo_primitivo : INT\n                   | FLOAT\n    '
    
_lr_action_items = {'VOID':([0,2,3,4,21,],[-2,7,-3,-4,-5,]),'INT':([0,2,3,4,11,16,21,],[-2,8,-3,-4,8,8,-5,]),'FLOAT':([0,2,3,4,11,16,21,],[-2,9,-3,-4,9,9,-5,]),'$end':([0,1,2,3,4,21,],[-2,0,-1,-3,-4,-5,]),'ID':([5,6,7,8,9,14,],[10,-11,-12,-13,-14,17,]),'APAR':([10,],[11,]),'FPAR':([11,12,13,17,19,],[-8,15,-9,-7,-10,]),'VIRG':([11,12,13,17,19,],[-8,16,-9,-7,-10,]),'ACHAVE':([15,],[18,]),'FCHAVE':([18,20,],[-6,21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'programa':([0,],[1,]),'lista_dec_externas':([0,],[2,]),'dec_externa':([2,],[3,]),'dec_funcao':([2,],[4,]),'tipo_retorno':([2,],[5,]),'tipo_primitivo':([2,11,16,],[6,14,14,]),'lista_argumentos':([11,],[12,]),'argumento':([11,16,],[13,19,]),'lista_comandos':([18,],[20,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> programa","S'",1,None,None,None),
  ('programa -> lista_dec_externas','programa',1,'p_programa','sintatico.py',20),
  ('lista_dec_externas -> <empty>','lista_dec_externas',0,'p_lista_dec_externas_01','sintatico.py',27),
  ('lista_dec_externas -> lista_dec_externas dec_externa','lista_dec_externas',2,'p_lista_dec_externas_02','sintatico.py',34),
  ('dec_externa -> dec_funcao','dec_externa',1,'p_dec_externa_01','sintatico.py',42),
  ('dec_funcao -> tipo_retorno ID APAR lista_argumentos FPAR ACHAVE lista_comandos FCHAVE','dec_funcao',8,'p_dec_funcao','sintatico.py',49),
  ('lista_comandos -> <empty>','lista_comandos',0,'p_lista_comandos_01','sintatico.py',56),
  ('argumento -> tipo_primitivo ID','argumento',2,'p_argumento','sintatico.py',63),
  ('lista_argumentos -> <empty>','lista_argumentos',0,'p_lista_argumentos_01','sintatico.py',70),
  ('lista_argumentos -> argumento','lista_argumentos',1,'p_lista_argumentos_02','sintatico.py',77),
  ('lista_argumentos -> lista_argumentos VIRG argumento','lista_argumentos',3,'p_lista_argumentos_03','sintatico.py',84),
  ('tipo_retorno -> tipo_primitivo','tipo_retorno',1,'p_tipo_retorno','sintatico.py',92),
  ('tipo_retorno -> VOID','tipo_retorno',1,'p_tipo_retorno','sintatico.py',93),
  ('tipo_primitivo -> INT','tipo_primitivo',1,'p_tipo_primitivo','sintatico.py',100),
  ('tipo_primitivo -> FLOAT','tipo_primitivo',1,'p_tipo_primitivo','sintatico.py',101),
]
